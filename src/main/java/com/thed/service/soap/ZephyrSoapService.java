
package com.thed.service.soap;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ZephyrSoapService", targetNamespace = "http://soap.service.thed.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ZephyrSoapService {


    /**
     * 
     * @param searchCriterias
     * @param returnAllDataFlag
     * @param token
     * @return
     *     returns java.util.List<com.thed.service.soap.RemoteRequirementTree>
     * @throws ZephyrServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRequirementTreesByCriteria", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetRequirementTreesByCriteria")
    @ResponseWrapper(localName = "getRequirementTreesByCriteriaResponse", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetRequirementTreesByCriteriaResponse")
    public List<RemoteRequirementTree> getRequirementTreesByCriteria(
        @WebParam(name = "searchCriterias", targetNamespace = "")
        List<RemoteCriteria> searchCriterias,
        @WebParam(name = "returnAllDataFlag", targetNamespace = "")
        Boolean returnAllDataFlag,
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws ZephyrServiceException
    ;

    /**
     * 
     * @param remoteReleaseTestSchedules
     * @param token
     * @return
     *     returns java.util.List<com.thed.service.soap.RemoteFieldValue>
     * @throws ZephyrServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "assignTestSchedules", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.AssignTestSchedules")
    @ResponseWrapper(localName = "assignTestSchedulesResponse", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.AssignTestSchedulesResponse")
    public List<RemoteFieldValue> assignTestSchedules(
        @WebParam(name = "remoteReleaseTestSchedules", targetNamespace = "")
        List<RemoteReleaseTestSchedule> remoteReleaseTestSchedules,
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws ZephyrServiceException
    ;

    /**
     * 
     * @param remoteRequirementTree
     * @param token
     * @return
     *     returns java.lang.Long
     * @throws ZephyrServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createNewRequirementTree", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.CreateNewRequirementTree")
    @ResponseWrapper(localName = "createNewRequirementTreeResponse", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.CreateNewRequirementTreeResponse")
    public Long createNewRequirementTree(
        @WebParam(name = "remoteRequirementTree", targetNamespace = "")
        RemoteRequirementTree remoteRequirementTree,
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws ZephyrServiceException
    ;

    /**
     * 
     * @param projectId
     * @param token
     * @return
     *     returns com.thed.service.soap.RemoteProject
     * @throws ZephyrServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getProjectById", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetProjectById")
    @ResponseWrapper(localName = "getProjectByIdResponse", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetProjectByIdResponse")
    public RemoteProject getProjectById(
        @WebParam(name = "projectId", targetNamespace = "")
        Long projectId,
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws ZephyrServiceException
    ;

    /**
     * 
     * @param searchCriterias
     * @param returnAllDataFlag
     * @param token
     * @return
     *     returns java.util.List<com.thed.service.soap.RemoteRelease>
     * @throws ZephyrServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getReleasesByCriteria", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetReleasesByCriteria")
    @ResponseWrapper(localName = "getReleasesByCriteriaResponse", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetReleasesByCriteriaResponse")
    public List<RemoteRelease> getReleasesByCriteria(
        @WebParam(name = "searchCriterias", targetNamespace = "")
        List<RemoteCriteria> searchCriterias,
        @WebParam(name = "returnAllDataFlag", targetNamespace = "")
        Boolean returnAllDataFlag,
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws ZephyrServiceException
    ;

    /**
     * 
     * @param searchCriterias
     * @param returnAllDataFlag
     * @param token
     * @return
     *     returns java.util.List<com.thed.service.soap.RemoteUser>
     * @throws ZephyrServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUsersByCriteria", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetUsersByCriteria")
    @ResponseWrapper(localName = "getUsersByCriteriaResponse", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetUsersByCriteriaResponse")
    public List<RemoteUser> getUsersByCriteria(
        @WebParam(name = "searchCriterias", targetNamespace = "")
        List<RemoteCriteria> searchCriterias,
        @WebParam(name = "returnAllDataFlag", targetNamespace = "")
        Boolean returnAllDataFlag,
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws ZephyrServiceException
    ;

    /**
     * 
     * @param bulkAssign
     * @param remotePhase
     * @param token
     * @return
     *     returns java.lang.Long
     * @throws ZephyrServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addPhaseToCycle", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.AddPhaseToCycle")
    @ResponseWrapper(localName = "addPhaseToCycleResponse", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.AddPhaseToCycleResponse")
    public Long addPhaseToCycle(
        @WebParam(name = "remotePhase", targetNamespace = "")
        RemotePhase remotePhase,
        @WebParam(name = "bulkAssign", targetNamespace = "")
        Integer bulkAssign,
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws ZephyrServiceException
    ;

    /**
     * 
     * @param searchCriterias
     * @param returnAllDataFlag
     * @param token
     * @return
     *     returns java.util.List<com.thed.service.soap.RemoteRepositoryTreeTestcase>
     * @throws ZephyrServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTestcasesByCriteria", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetTestcasesByCriteria")
    @ResponseWrapper(localName = "getTestcasesByCriteriaResponse", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetTestcasesByCriteriaResponse")
    public List<RemoteRepositoryTreeTestcase> getTestcasesByCriteria(
        @WebParam(name = "searchCriterias", targetNamespace = "")
        List<RemoteCriteria> searchCriterias,
        @WebParam(name = "returnAllDataFlag", targetNamespace = "")
        Boolean returnAllDataFlag,
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws ZephyrServiceException
    ;

    /**
     * 
     * @param entityName
     * @param entityId
     * @param token
     * @return
     *     returns java.util.List<com.thed.service.soap.RemoteFieldValue>
     * @throws ZephyrServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteAttachmentsByCriteria", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.DeleteAttachmentsByCriteria")
    @ResponseWrapper(localName = "deleteAttachmentsByCriteriaResponse", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.DeleteAttachmentsByCriteriaResponse")
    public List<RemoteFieldValue> deleteAttachmentsByCriteria(
        @WebParam(name = "entityName", targetNamespace = "")
        String entityName,
        @WebParam(name = "entityId", targetNamespace = "")
        Long entityId,
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws ZephyrServiceException
    ;

    /**
     * 
     * @param searchCriterias
     * @param returnAllDataFlag
     * @param token
     * @return
     *     returns java.util.List<com.thed.service.soap.RemoteRepositoryTree>
     * @throws ZephyrServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTestCaseTreesByCriteria", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetTestCaseTreesByCriteria")
    @ResponseWrapper(localName = "getTestCaseTreesByCriteriaResponse", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetTestCaseTreesByCriteriaResponse")
    public List<RemoteRepositoryTree> getTestCaseTreesByCriteria(
        @WebParam(name = "searchCriterias", targetNamespace = "")
        List<RemoteCriteria> searchCriterias,
        @WebParam(name = "returnAllDataFlag", targetNamespace = "")
        Boolean returnAllDataFlag,
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws ZephyrServiceException
    ;

    /**
     * 
     * @param remoteRepositoryTreeTestcase
     * @param token
     * @return
     *     returns java.util.List<com.thed.service.soap.RemoteFieldValue>
     * @throws ZephyrServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createNewTestcase", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.CreateNewTestcase")
    @ResponseWrapper(localName = "createNewTestcaseResponse", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.CreateNewTestcaseResponse")
    public List<RemoteFieldValue> createNewTestcase(
        @WebParam(name = "remoteRepositoryTreeTestcase", targetNamespace = "")
        RemoteRepositoryTreeTestcase remoteRepositoryTreeTestcase,
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws ZephyrServiceException
    ;

    /**
     * 
     * @param token
     * @throws ZephyrServiceException
     */
    @WebMethod
    @RequestWrapper(localName = "logout", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.Logout")
    @ResponseWrapper(localName = "logoutResponse", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.LogoutResponse")
    public void logout(
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws ZephyrServiceException
    ;

    /**
     * 
     * @param remoteCycle
     * @param token
     * @return
     *     returns java.lang.Long
     * @throws ZephyrServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createNewCycle", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.CreateNewCycle")
    @ResponseWrapper(localName = "createNewCycleResponse", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.CreateNewCycleResponse")
    public Long createNewCycle(
        @WebParam(name = "remoteCycle", targetNamespace = "")
        RemoteCycle remoteCycle,
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws ZephyrServiceException
    ;

    /**
     * 
     * @param attachmentId
     * @param token
     * @return
     *     returns com.thed.service.soap.RemoteAttachment
     * @throws ZephyrServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAttachmentById", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetAttachmentById")
    @ResponseWrapper(localName = "getAttachmentByIdResponse", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetAttachmentByIdResponse")
    public RemoteAttachment getAttachmentById(
        @WebParam(name = "attachmentId", targetNamespace = "")
        Long attachmentId,
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws ZephyrServiceException
    ;

    /**
     * 
     * @param password
     * @param username
     * @return
     *     returns java.lang.String
     * @throws ZephyrServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.LoginResponse")
    public String login(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password)
        throws ZephyrServiceException
    ;

    /**
     * 
     * @param releaseId
     * @param token
     * @return
     *     returns com.thed.service.soap.RemoteRelease
     * @throws ZephyrServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getReleaseById", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetReleaseById")
    @ResponseWrapper(localName = "getReleaseByIdResponse", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetReleaseByIdResponse")
    public RemoteRelease getReleaseById(
        @WebParam(name = "releaseId", targetNamespace = "")
        Long releaseId,
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws ZephyrServiceException
    ;

    /**
     * 
     * @param searchCriterias
     * @param returnAllDataFlag
     * @param token
     * @return
     *     returns java.util.List<com.thed.service.soap.RemoteRequirement>
     * @throws ZephyrServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRequirementsByCriteria", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetRequirementsByCriteria")
    @ResponseWrapper(localName = "getRequirementsByCriteriaResponse", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetRequirementsByCriteriaResponse")
    public List<RemoteRequirement> getRequirementsByCriteria(
        @WebParam(name = "searchCriterias", targetNamespace = "")
        List<RemoteCriteria> searchCriterias,
        @WebParam(name = "returnAllDataFlag", targetNamespace = "")
        Boolean returnAllDataFlag,
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws ZephyrServiceException
    ;

    /**
     * 
     * @param testcaseId
     * @param token
     * @return
     *     returns com.thed.service.soap.RemoteRepositoryTreeTestcase
     * @throws ZephyrServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTestcaseById", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetTestcaseById")
    @ResponseWrapper(localName = "getTestcaseByIdResponse", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetTestcaseByIdResponse")
    public RemoteRepositoryTreeTestcase getTestcaseById(
        @WebParam(name = "testcaseId", targetNamespace = "")
        Long testcaseId,
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws ZephyrServiceException
    ;

    /**
     * 
     * @param userId
     * @param token
     * @return
     *     returns com.thed.service.soap.RemoteUser
     * @throws ZephyrServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUserById", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetUserById")
    @ResponseWrapper(localName = "getUserByIdResponse", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetUserByIdResponse")
    public RemoteUser getUserById(
        @WebParam(name = "userId", targetNamespace = "")
        Long userId,
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws ZephyrServiceException
    ;

    /**
     * 
     * @param attachmentId
     * @param token
     * @return
     *     returns com.thed.service.soap.RemoteFieldValue
     * @throws ZephyrServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteAttachmentById", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.DeleteAttachmentById")
    @ResponseWrapper(localName = "deleteAttachmentByIdResponse", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.DeleteAttachmentByIdResponse")
    public RemoteFieldValue deleteAttachmentById(
        @WebParam(name = "attachmentId", targetNamespace = "")
        Long attachmentId,
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws ZephyrServiceException
    ;

    /**
     * 
     * @param remoteRequirementId
     * @param remoteFieldValues
     * @param token
     * @return
     *     returns java.lang.Long
     * @throws ZephyrServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateRequirement", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.UpdateRequirement")
    @ResponseWrapper(localName = "updateRequirementResponse", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.UpdateRequirementResponse")
    public Long updateRequirement(
        @WebParam(name = "remoteRequirementId", targetNamespace = "")
        Long remoteRequirementId,
        @WebParam(name = "remoteFieldValues", targetNamespace = "")
        List<RemoteFieldValue> remoteFieldValues,
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws ZephyrServiceException
    ;

    /**
     * 
     * @param entityName
     * @param token
     * @return
     *     returns java.util.List<com.thed.service.soap.RemoteCustomField>
     * @throws ZephyrServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCustomFields", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetCustomFields")
    @ResponseWrapper(localName = "getCustomFieldsResponse", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetCustomFieldsResponse")
    public List<RemoteCustomField> getCustomFields(
        @WebParam(name = "entityName", targetNamespace = "")
        String entityName,
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws ZephyrServiceException
    ;

    /**
     * 
     * @param remoteAttachment
     * @param token
     * @return
     *     returns com.thed.service.soap.RemoteFieldValue
     * @throws ZephyrServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateAttachment", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.UpdateAttachment")
    @ResponseWrapper(localName = "updateAttachmentResponse", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.UpdateAttachmentResponse")
    public RemoteFieldValue updateAttachment(
        @WebParam(name = "remoteAttachment", targetNamespace = "")
        RemoteAttachment remoteAttachment,
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws ZephyrServiceException
    ;

    /**
     * 
     * @param testResults
     * @param token
     * @return
     *     returns java.util.List<com.thed.service.soap.RemoteFieldValue>
     * @throws ZephyrServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateTestStatus", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.UpdateTestStatus")
    @ResponseWrapper(localName = "updateTestStatusResponse", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.UpdateTestStatusResponse")
    public List<RemoteFieldValue> updateTestStatus(
        @WebParam(name = "testResults", targetNamespace = "")
        List<RemoteTestResult> testResults,
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws ZephyrServiceException
    ;

    /**
     * 
     * @param remoteAttachments
     * @param token
     * @return
     *     returns java.util.List<com.thed.service.soap.RemoteFieldValue>
     * @throws ZephyrServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addAttachments", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.AddAttachments")
    @ResponseWrapper(localName = "addAttachmentsResponse", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.AddAttachmentsResponse")
    public List<RemoteFieldValue> addAttachments(
        @WebParam(name = "remoteAttachments", targetNamespace = "")
        List<RemoteAttachment> remoteAttachments,
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws ZephyrServiceException
    ;

    /**
     * 
     * @param searchCriterias
     * @param returnAllDataFlag
     * @param token
     * @return
     *     returns java.util.List<com.thed.service.soap.RemoteProject>
     * @throws ZephyrServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getProjectsByCriteria", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetProjectsByCriteria")
    @ResponseWrapper(localName = "getProjectsByCriteriaResponse", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetProjectsByCriteriaResponse")
    public List<RemoteProject> getProjectsByCriteria(
        @WebParam(name = "searchCriterias", targetNamespace = "")
        List<RemoteCriteria> searchCriterias,
        @WebParam(name = "returnAllDataFlag", targetNamespace = "")
        Boolean returnAllDataFlag,
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws ZephyrServiceException
    ;

    /**
     * 
     * @param cycleId
     * @param token
     * @return
     *     returns com.thed.service.soap.RemoteCycle
     * @throws ZephyrServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCycleById", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetCycleById")
    @ResponseWrapper(localName = "getCycleByIdResponse", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetCycleByIdResponse")
    public RemoteCycle getCycleById(
        @WebParam(name = "cycleId", targetNamespace = "")
        Long cycleId,
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws ZephyrServiceException
    ;

    /**
     * 
     * @param requirementId
     * @param token
     * @return
     *     returns com.thed.service.soap.RemoteRequirement
     * @throws ZephyrServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRequirementById", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetRequirementById")
    @ResponseWrapper(localName = "getRequirementByIdResponse", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetRequirementByIdResponse")
    public RemoteRequirement getRequirementById(
        @WebParam(name = "requirementId", targetNamespace = "")
        Long requirementId,
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws ZephyrServiceException
    ;

    /**
     * 
     * @param searchCriterias
     * @param returnAllDataFlag
     * @param token
     * @return
     *     returns java.util.List<com.thed.service.soap.RemoteReleaseTestSchedule>
     * @throws ZephyrServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTestSchedulesByCriteria", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetTestSchedulesByCriteria")
    @ResponseWrapper(localName = "getTestSchedulesByCriteriaResponse", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetTestSchedulesByCriteriaResponse")
    public List<RemoteReleaseTestSchedule> getTestSchedulesByCriteria(
        @WebParam(name = "searchCriterias", targetNamespace = "")
        List<RemoteCriteria> searchCriterias,
        @WebParam(name = "returnAllDataFlag", targetNamespace = "")
        Boolean returnAllDataFlag,
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws ZephyrServiceException
    ;

    /**
     * 
     * @param remoteRepositoryTree
     * @param token
     * @return
     *     returns java.lang.Long
     * @throws ZephyrServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createNewTestcaseTree", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.CreateNewTestcaseTree")
    @ResponseWrapper(localName = "createNewTestcaseTreeResponse", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.CreateNewTestcaseTreeResponse")
    public Long createNewTestcaseTree(
        @WebParam(name = "remoteRepositoryTree", targetNamespace = "")
        RemoteRepositoryTree remoteRepositoryTree,
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws ZephyrServiceException
    ;

    /**
     * 
     * @param remoteRequirement
     * @param token
     * @return
     *     returns java.lang.Long
     * @throws ZephyrServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createNewRequirement", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.CreateNewRequirement")
    @ResponseWrapper(localName = "createNewRequirementResponse", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.CreateNewRequirementResponse")
    public Long createNewRequirement(
        @WebParam(name = "remoteRequirement", targetNamespace = "")
        RemoteRequirement remoteRequirement,
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws ZephyrServiceException
    ;

    /**
     * 
     * @param requirementTreeid
     * @param token
     * @return
     *     returns com.thed.service.soap.RemoteRequirementTree
     * @throws ZephyrServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRequirementTreeById", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetRequirementTreeById")
    @ResponseWrapper(localName = "getRequirementTreeByIdResponse", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetRequirementTreeByIdResponse")
    public RemoteRequirementTree getRequirementTreeById(
        @WebParam(name = "requirementTreeid", targetNamespace = "")
        Long requirementTreeid,
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws ZephyrServiceException
    ;

    /**
     * 
     * @param testScheduleId
     * @param token
     * @return
     *     returns com.thed.service.soap.RemoteReleaseTestSchedule
     * @throws ZephyrServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTestSchedulesById", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetTestSchedulesById")
    @ResponseWrapper(localName = "getTestSchedulesByIdResponse", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetTestSchedulesByIdResponse")
    public RemoteReleaseTestSchedule getTestSchedulesById(
        @WebParam(name = "testScheduleId", targetNamespace = "")
        Long testScheduleId,
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws ZephyrServiceException
    ;

    /**
     * 
     * @param searchCriterias
     * @param returnAllDataFlag
     * @param token
     * @return
     *     returns java.util.List<com.thed.service.soap.RemoteCycle>
     * @throws ZephyrServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCyclesByCriteria", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetCyclesByCriteria")
    @ResponseWrapper(localName = "getCyclesByCriteriaResponse", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetCyclesByCriteriaResponse")
    public List<RemoteCycle> getCyclesByCriteria(
        @WebParam(name = "searchCriterias", targetNamespace = "")
        List<RemoteCriteria> searchCriterias,
        @WebParam(name = "returnAllDataFlag", targetNamespace = "")
        Boolean returnAllDataFlag,
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws ZephyrServiceException
    ;

    /**
     * 
     * @param searchCriterias
     * @param returnAllDataFlag
     * @param token
     * @return
     *     returns java.util.List<com.thed.service.soap.RemoteAttachment>
     * @throws ZephyrServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAttachmentsByCriteria", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetAttachmentsByCriteria")
    @ResponseWrapper(localName = "getAttachmentsByCriteriaResponse", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetAttachmentsByCriteriaResponse")
    public List<RemoteAttachment> getAttachmentsByCriteria(
        @WebParam(name = "searchCriterias", targetNamespace = "")
        List<RemoteCriteria> searchCriterias,
        @WebParam(name = "returnAllDataFlag", targetNamespace = "")
        Boolean returnAllDataFlag,
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws ZephyrServiceException
    ;

    /**
     * 
     * @param remoteRepositoryId
     * @param token
     * @return
     *     returns com.thed.service.soap.RemoteRepositoryTree
     * @throws ZephyrServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTestcaseTreeById", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetTestcaseTreeById")
    @ResponseWrapper(localName = "getTestcaseTreeByIdResponse", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.GetTestcaseTreeByIdResponse")
    public RemoteRepositoryTree getTestcaseTreeById(
        @WebParam(name = "remoteRepositoryId", targetNamespace = "")
        Long remoteRepositoryId,
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws ZephyrServiceException
    ;

    /**
     * 
     * @param remoteFieldValues
     * @param testCaseId
     * @param token
     * @return
     *     returns java.lang.Long
     * @throws ZephyrServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateTestcase", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.UpdateTestcase")
    @ResponseWrapper(localName = "updateTestcaseResponse", targetNamespace = "http://soap.service.thed.com/", className = "com.thed.service.soap.UpdateTestcaseResponse")
    public Long updateTestcase(
        @WebParam(name = "testCaseId", targetNamespace = "")
        Long testCaseId,
        @WebParam(name = "remoteFieldValues", targetNamespace = "")
        List<RemoteFieldValue> remoteFieldValues,
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws ZephyrServiceException
    ;

}
